% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weights.R
\name{weights_spline}
\alias{weights_spline}
\alias{weights_spline,OneStageBasket-method}
\title{Weights Based on monotonic splines}
\usage{
weights_spline(design, ...)

\S4method{weights_spline}{OneStageBasket}(
  design,
  n,
  diffknots = c(1, 0.5, 0),
  weightknots = c(0, 0, 1),
  splinemethod = "monoH.FC",
  clamplim = c(0, 1),
  ...
)
}
\arguments{
\item{design}{An object of class \code{Basket} created by
\code{setupOneStageBasket} or \code{setupTwoStageBasket}.}

\item{...}{Further arguments.}

\item{n}{The sample size per basket.}
}
\value{
A matrix including the weights of all possible pairwise outcomes.
}
\description{
Weights Based on monotonic splines
}
\details{
\code{weights_spline} calculates the weights based on monotonic
splines. First, an interpolating spline is defined by the user, identical
to the interpolating splines available in \code{\link{splinefun}}.
As such, more than two knots have to be specified via the arguments
\code{weightknots} and \code{diffknots}, which have to be vectors of
matching lengths. Values of corresponding positions within the vectors
form the knots used for interpolation.
The weight for two baskets i and j is then found by calculating the
difference in response rates for binary outcomes and applying the
interpolating spline.

The function is generally not called by the user but passed to another
function such as \code{\link{toer}} and \code{\link{pow}} to specify
how the weights are calculated.
}
\section{Methods (by class)}{
\itemize{
\item \code{weights_spline(OneStageBasket)}: Weights for a single-stage basket
design based on monotonic splines.

}}
\examples{
design <- setupOneStageBasket(k = 3, p0 = 0.2)
toer(design, n = 15, lambda = 0.99, weight_fun = weights_spline)

}
